<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>XiaoSe&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://xiaosee.top/"/>
  <updated>2017-03-09T03:21:23.567Z</updated>
  <id>http://xiaosee.top/</id>
  
  <author>
    <name>XiaoSe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java int 转 String</title>
    <link href="http://xiaosee.top/2017/03/08/Java-int-%E8%BD%AC-String/"/>
    <id>http://xiaosee.top/2017/03/08/Java-int-转-String/</id>
    <published>2017-03-08T09:39:41.000Z</published>
    <updated>2017-03-09T03:21:23.567Z</updated>
    
    <content type="html"><![CDATA[<h3 id="int-gt-String"><a href="#int-gt-String" class="headerlink" title="int -&gt; String"></a>int -&gt; String</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> i = <span class="number">12345</span>;</div><div class="line">String s = <span class="string">""</span>;</div></pre></td></tr></table></figure>
<ol>
<li><p>第一种方法：<code>s = i + &quot;&quot;;</code></p>
</li>
<li><p>第二种方法：<code>s = String.valueOf(i);</code></p>
</li>
</ol>
<blockquote>
<p>第一种方法：<code>s = i + &quot;&quot;;</code> 会产生两个 String 对象。<br>第二种方法：<code>s = String.valueOf(i);</code> 直接使用 String 类的静态方法，只产生一个对象。</p>
</blockquote>
<a id="more"></a>
<h3 id="String-gt-int"><a href="#String-gt-int" class="headerlink" title="String -&gt; int"></a>String -&gt; int</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">s = <span class="string">"12345"</span>;</div><div class="line"><span class="keyword">int</span> i;</div></pre></td></tr></table></figure>
<ol>
<li><p>第一种方法：<code>i = Integer.parseInt(s);</code></p>
</li>
<li><p>第二种方法：<code>i = Integer.valueOf(s).intValue();</code></p>
</li>
</ol>
<blockquote>
<p>第一种方法：<code>i = Integer.parseInt(s);</code>直接使用静态方法，不会产生多余的对象，但会抛出异常。<br>第二种方法：<code>i = Integer.valueOf(s).intValue();</code>，<code>Integer.valueOf(s)</code> 相当于 <code>new Integer(Integer.parseInt(s))</code>，也会抛异常，但会多产生一个对象。</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;int-gt-String&quot;&gt;&lt;a href=&quot;#int-gt-String&quot; class=&quot;headerlink&quot; title=&quot;int -&amp;gt; String&quot;&gt;&lt;/a&gt;int -&amp;gt; String&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;12345&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;String s = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;第一种方法：&lt;code&gt;s = i + &amp;quot;&amp;quot;;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;第二种方法：&lt;code&gt;s = String.valueOf(i);&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;第一种方法：&lt;code&gt;s = i + &amp;quot;&amp;quot;;&lt;/code&gt; 会产生两个 String 对象。&lt;br&gt;第二种方法：&lt;code&gt;s = String.valueOf(i);&lt;/code&gt; 直接使用 String 类的静态方法，只产生一个对象。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Java int String" scheme="http://xiaosee.top/tags/Java-int-String/"/>
    
  </entry>
  
  <entry>
    <title>博客维护方法</title>
    <link href="http://xiaosee.top/2017/03/08/%E5%8D%9A%E5%AE%A2%E7%BB%B4%E6%8A%A4%E6%96%B9%E6%B3%95/"/>
    <id>http://xiaosee.top/2017/03/08/博客维护方法/</id>
    <published>2017-03-08T08:10:23.000Z</published>
    <updated>2017-03-09T03:23:20.829Z</updated>
    
    <content type="html"><![CDATA[<p>博客搭建好了，记录下维护方法。免得以后忘记了。<br><a id="more"></a></p>
<h3 id="新建博客"><a href="#新建博客" class="headerlink" title="新建博客"></a>新建博客</h3><ol>
<li><p>在博客的根目录下执行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new &quot;postName&quot; #新建文章</div></pre></td></tr></table></figure>
</li>
<li><p>在<code>\source\_posts\</code>目录下会形成一个<code>.md</code>文件，这个 md 文件就是博客的内容。用<a href="https://www.zybuluo.com/" target="_blank" rel="external">作业部落</a>方便在线编辑。</p>
</li>
<li>运行<code>deploy.sh</code>发布博客到 GitHub。</li>
</ol>
<h3 id="重新配置环境"><a href="#重新配置环境" class="headerlink" title="重新配置环境"></a>重新配置环境</h3><ol>
<li><p>安装Node.js：<a href="https://nodejs.org/" target="_blank" rel="external">下载</a></p>
</li>
<li><p>安装Git：<a href="https://git-scm.com/" target="_blank" rel="external">下载</a></p>
</li>
<li><p>安装Hexo：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ cd d:/SeeeBlog</div><div class="line">$ npm install hexo-cli -g</div><div class="line">$ hexo init</div><div class="line">$ npm install</div><div class="line">$ hexo g # 或者hexo generate</div><div class="line">$ hexo s # 或者hexo server，可以在http://localhost:4000/ 查看</div></pre></td></tr></table></figure>
<p>常用命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$ hexo new &quot;postName&quot; #新建文章</div><div class="line">$ hexo new page &quot;pageName&quot; #新建页面</div><div class="line"></div><div class="line">$ hexo n == hexo new</div><div class="line">$ hexo g == hexo generate</div><div class="line">$ hexo s == hexo server</div><div class="line">$ hexo d == hexo deploy</div><div class="line"></div><div class="line">$ hexo d -g #生成部署</div><div class="line">$ hexo s -g #生成预览</div></pre></td></tr></table></figure>
</li>
<li><p>安装Apollo 主题：<a href="https://github.com/pinggod/hexo-theme-apollo" target="_blank" rel="external">下载 zip </a>文件解压到<code>themes</code>文件夹下面</p>
</li>
<li><p>同步GitHub仓库到本地</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git clone git@github.com:XiaoSeee/XiaoSeee.GitHub.io.git .deploy/XiaoSeee.GitHub.io.git</div></pre></td></tr></table></figure>
</li>
<li><p>创建一个<code>deploy.sh</code>脚本文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">hexo generate</div><div class="line">cp -R public/* .deploy</div><div class="line">cd .deploy</div><div class="line">git add .</div><div class="line">git commit -m &apos;update&apos;</div><div class="line">git push</div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://linghucong.js.org/2016/04/15/2016-04-15-hexo-github-pages-blog/" target="_blank" rel="external">手把手教你使用Hexo + Github Pages搭建个人独立博客</a><br><a href="https://github.com/pinggod/hexo-theme-apollo/blob/master/doc/doc-zh.md" target="_blank" rel="external">Apollo 主题的说明文档</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;博客搭建好了，记录下维护方法。免得以后忘记了。&lt;br&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://xiaosee.top/tags/hexo/"/>
    
  </entry>
  
</feed>
